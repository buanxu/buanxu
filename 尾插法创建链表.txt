   尾插法创建链表

1、已知结点个数，不带头节点                                                                        


LinkList creat_Linklist(int n)
{
LNode   *L=NULL,*s,*r=NULL;
     int i;
     for(i=1;i<=N;i++)
     {
         s=(LinkList)malloc(sizeof( LNode));
         scanf("%d",&s->data);
         s->next=NULL;
         if(i==1)  L=s;
         else      r->next=s;
         r=s;
     }
     return L;
}


2、已知结点个数，带头节点

LinkList   creat_Linklist(int N)
{
LNode   *L=NULL,*s,*r=NULL;
     int i;
     L=(LinkList)malloc(sizeof(LNode));
     L->next=NULL;
     r=L;
     for(i=1;i<=N;i++)
     {
         s=(LinkList)malloc(sizeof(LNode));
         scanf("%d",&s->data);
         s->next=NULL;
         r->next=s;
         r=s;
     }
     return L;
}

3、不带头结点，用结束标志flag来创建链表


LinkList  create_Linklist( )
{
      LNode   *L=NULL,*s,*r=NULL;
       int e,flag=-1;
       scanf("%d",&e);
       while(e!=flag)
       {
          s=(LinkList)malloc(sizeof( LNode));
          s->data=e;
          s->next=NULL;
          if(L==NULL)   L=s;
          else      r->next=s;
          r=s;
          scanf("%d",&e);
       }
       return L;
}



4、带头结点，用结束标志flag来创建链表


LinkList   create_Linklist( )
{
        LNode   *L=NULL,*s,*r=NULL;
       int e,flag=-1;
       L=(LinkList)malloc(sizeof(  LNode));
       L->next=NULL;
       r=L;
       scanf("%d",&e);
       while(e!=flag)
       {
          s=(LinkList)malloc(sizeof(  LNode));
          s->data=e;
          s->next=NULL;
          r->next=s;
          r=s;
          scanf("%d",&e);
       }
       return L;
}
